warnings()
spectrum.data
sum(spectrum.data$total.mutations)
spectrum.data
1:0
1:0
total
ncols(spectrum.data)
numcols(spectrum.data)
dim(spectrum.data)
warnings()
spectrum.data
j
g
spectrum.data[spectrum.data$Genome==g,]
spectrum.data[spectrum.data$Genome==g,]$j
spectrum.data[spectrum.data$Genome==g,]$`j`
spectrum.data[spectrum.data$Genome==g,][[j]]
subset(spectrum.data[spectrum.data$Genome==g,], select=c(j))
spectrum.barplot.data
spectrum.barplot.data
spectrum.plot
x = "Ara-6_REL11005"
x[1:5]
substr(x,1,5)
spectrum.barplot.data$Genome
spectrum.barplot.data
spectrum.plot
  spectrum.plot <- ggplot(spectrum.barplot.data, aes(x=Genome)) + geom_bar(aes(fill=Mutation))
spectrum.plot
install.packages(unicode)
install.packages("unicode")
y
install.packages("Unicode")
intToUtf8(0xB8)
"test" + "hello"
paste("test", "hello")
xlabelstring
quartz()
warnings()
expression(theta)
library(plotmath)
install.packages("plotmath")
mtext(expression(theta[s],side=1,line=2)
)
mtext(expression(theta[s],side=1,line=2))
)
sum(MMR.data$total.mutations)
sum(mutT.data$total.mutations)
sum(nonmutator.data$total.mutations)
582+256
data$total.mutations
sum(data$total.mutations)
sum(mutT.data$total.mutations)
sum(MMR.data$total.mutations)
sum(nonmutator.data$total.mutations
)
data$genome
head(data)
data[is.na(data$genome),]$total.mutations
data$total.mutations
sum(data$total.mutations)
sum(data[is.na(data$genome),]$total.mutations)
length(MMR.data$total.mutations)
length(mutT.data$total.mutations)
length(nonmutator.data$total.mutations)
length(data$total.mutations)
length(is.na(data$genome),]$total.mutations)
length(data[is.na(data$genome),]$total.mutations)
3021-1992
 data$locus_tag
length(data$locus_tag)
length(unique(data$locus_tag))
the.data <- data
mutation.total
MMR.data$total.mutations
sum(MMR.data$total.mutations)
the.data <- MMR.data
data.mutation.total <- 897
MMR.data.mutation.total <- mutation.total
MMR.data.mutation.total
the.data <- mutT.data
mutT.data.mutation.total <- mutation.total
mutT.data.mutation.total
250+539
the.data <- nonmutator.data
mutation.total
MMR.data.mutation.total + mutT.data.mutation.total + nonmutator.mutation.total
MMR.data.mutation.total + mutT.data.mutation.total + mutation.total
data.mutation.total
the.data <- data
the.data$locus_tag
unique.relevant.data$locus_tag
sorted(unique.relevant.data$locus_tag)
sort(unique.relevant.data$locus_tag)
unique.relevant.data
sort(unique.relevant.data)
test <- unique.relevant.data[sort(unique.relevant.data$locus_tag),]
test
unique.relevant.data
head(the.data)
paste(MMR.genomes, mutT.genomes, non.mutator.genomes)
paste(MMR.genomes, mutT.genomes, nonmutator.genomes)
c(MMR.genomes, mutT.genomes, non.mutator.genomes)
c(MMR.genomes, mutT.genomes, nonmutator.genomes)
all.data$total.mutations
sum(all.data$total.mutations)
sum(MMR.data$total.mutations)
sum(muT.data$total.mutations)
sum(mutT.data$total.mutations)
sum(nonmutator.data$total.mutations)
14+256+582
sum(data$total.mutations)
sum(all.data$total.mutations)
rest.data
sum(all.data$total.mutations)
sum(data$total.mutations)
sum(MMR.data$total.mutations)
sum(mutT.data$total.mutations)
sum(nonmutator.genomes$total.mutations)
sum(nonmutator.data$total.mutations)
799+256+14
799+256
inigo.data <- read.csv("~/Desktop/rebriefcommunicationsarisingfromyournaturepaper/thetaS_Martincorena.csv", header=TRUE)
filtered.inigo <- inigo.data[complete.cases(inigo.data),]
head(filtered.inigo)
head(data)
the.data <- data
head(relevant.data)
names(filtered.inigo)
names(filtered.inigo) <- c("locus_tag", "thetaS", "my.thetaS)
)
sdf
"
)
names(filtered.inigo) <- c("locus_tag", "thetaS", "my.thetaS")
)
sdf
"
)
names(filtered.inigo
"
names(filtered.inigo)
test <- merge(filtered.inigo, relevant.data)
head(test)
head(relevant.data)
head(filtered.inigo)
class(filtered.inigo$thetaS)
class(filtered.inigo$locus_tag)
class(relevant.data$locus.tag)
class(relevant.data$locus_tag)
relevant.data$thetaS <- NULL
names(relevant.data)
test <- merge(relevant.data, filtered.inigo)
test
test1 <- test
test <- test[with(test, order(thetaS)),]
test
names(test)
test$thetaS
test
relevant.data <- test
head(relevant.data)
ks.test(empirical.cdf, alt1.cdf, simulate.p.value=TRUE)
ks.test(empirical.cdf, null.cdf, simulate.p.value=TRUE)
qplot(empirical.cdf)
empirical.cdf
plot(y=empirical.cdf, x=1:length(empirical.cdf))
plot(y=empirical.cdf, x=1:length(alt1.cdf))
plot(y=alt1.cdf, x=1:length(alt1.cdf))
HGT.trues
the.results.to.plot <- results.to.plot
HGT.trues
qplot(y=unique.relevant.data$thetaS,x=unique.relevant.data$index)
plot(y=unique.relevant.data$thetaS,x=unique.relevant.data$index)
plot(y=unique.relevant.data$thetaS,x=1:length(unique.relevant.data$thetaS))
names(unique.relevant.data)
qplot(unique.relevant.data, y=thetaS)
qplot(data=unique.relevant.data, y=thetaS)
qplot(data=unique.relevant.data, y=thetaS) + scale_x_discrete("genes ranked by thetaS")
qplot(data=unique.relevant.data, y=thetaS) + scale_x_continuous("genes ranked by thetaS")
head(expression.data)
head(expression.data)
head(expression.data)
head(synon.data)
total
hit.genes
hit.genes <- unique(synon.data$gene)
hit.genes
head(hit.gene.expression.data)
head(non.hit.gene.expression.data)
hit.expression.data$Gene
non.hit.expression.data
non.hit.expression.data$Gene
head(mutated.genes)
mutated.genes
head(expression.data)
head(expression.data)
head(ara.plus.ancestor)
expr.data <- ara.plus.ancestor
head(expr.data)
head(exptr.data)
head(expr.data)
 expr.data[1,]
mean(c(-3.81, -3.94,-4.29, -4.46))
head(expr.data)
test <- c(-3.813607, -3.945576, -4.295291, -4.464659)
sd(test)/mean(test)
head(reproducible.expr.data)
abs(expr.data$CV)
head(reproducible.expr.data)
reproducible.expr.data
head(reproducible.expr.data)
length(reproducible.expr.data$CV)
length(exptr.data$CV)
length(expr.data$CV)
head(reproducible.expr.data)
  reproducible.expr.data <- subset(reproducible.expr.data, !grepl("*_", Gene))
head(reproducible.expr.data)
head(reproducible.expr.data)
head(reproducible.expr.data)
head(just.expression)
head(expr.data)
head(reproducible.expr.data)
expr.data <- ara.plus.ancestor
head(reproducible.expr.data)
  reproducible.expr.data1

head(reproducible.expr.data1)
)
head(reproducible.expr.data1)
reproducible.expr.data1
mutated.expr.data
head(mutated.expr.data)
head(non.mutated.expr.data)
expr.data <- ara.plus.ancestor
expr.data <- ara.plus.ancestor
kruskal.test(mutated.expr.data$Mean~non.mutated.expr.data$Mean)
length(mutated.expr.data$Mean)
length(non.mutated.expr.data$Mean)
712/(712+3511)
length(mutated.genes$Gene)
length(expr.data$Gene)
1138/4290
length(reproducible.expr.data$Gene)
1138/4223
comparison <- read.csv("/Users/Rohandinho/Desktop/Projects/luscombe-reanalysis/data/Martincorena_Maddamsetti_thetaS_estimates.csv
", header=TRUE)
pwd
pwd()
cwd()
comparison <- read.csv("../data/Martincorena_Maddamsetti_thetaS_estimates.csv", header=T)
head(comparison)
cor.test(comparison$Martincorena_thetaS, comparison$Maddamsetti_thetaS)
cor(comparison$Martincorena_thetaS, comparison$Maddamsetti_thetaS)
names(mutated.expr.data)
sum(mutated.expr.data$Mean)
sum(10^(mutated.expr.data$Mean))
?t.test
t.test(mutated.expr.data$Mean, non.mutated.expr.data$Mean)
analyze.data(ara.minus.ancestor1)
analyze.data <- function (expr.data) {

  mutated.genes <- read.csv("/Users/Rohandinho/Desktop/Projects/luscombe-reanalysis/data/unique_mutated_genes.csv", header=TRUE)
  
  just.expression <- expr.data
  just.expression$Gene <- NULL
  expr.data$Mean <- apply(just.expression, 1, mean)
  expr.data$SD <- apply(just.expression, 1, sd)
  expr.data$CV <- expr.data$SD/expr.data$Mean
  reproducible.expr.data <- subset(expr.data, abs(CV) < 0.2)
  
  reproducible.expr.data <- subset(reproducible.expr.data, !grepl("*_", Gene))
  
  mutated.expr.data <- subset(reproducible.expr.data, Gene %in% mutated.genes$Gene)
  non.mutated.expr.data <- subset(reproducible.expr.data, !(Gene %in% mutated.genes$Gene))

  
  
  quartz()
  library(ggplot2)
  qplot(mutated.expr.data$Mean)
  quartz()
  qplot(non.mutated.expr.data$Mean)
}
analyze.data(ara.minus.ancestor1)
analyze.data(ara.minus.ancestor1)
analyze.data(ara.minus.ancestor2)
analyze.data(ara.plus1.20K)
analyze.data(ara.minus1.20K)
analyze.data(ara.minus1.20K)
analyze.data(ara.plus1.20K)
expr.data <- ara.plus.ancestor
head(expr.data0
)
head(expr.data)
head(mapped.gene.data)
expr.data <- ara.plus.ancestor
head(mapped.gene.data)
length(good.expr.data$Gene)
length(mapped.gene.data$Gene)
head(reproducible.expr.data)
length(reproducible.expr.data$Gene)
head(mutated.genes)
expr.data <- ara.minus.ancestor1
analyze.data(expr.data)
analyze.data(pooled.data)
length(mutated.expr.data$Gene)
length(non.mutated.expr.data$Gene)
sapply(reproducible.expr.data$Gene, function(x) mapped.gene.data[mapped.gene.data$Gene==x,]$synonymous.mutations)
sapply(reproducible.expr.data$Gene, function(x) mapped.gene.data[unlist(mapped.gene.data$Gene)==x,]$synonymous.mutations)
sapply(good.expr.data$Gene, function(x) mapped.gene.data[mapped.gene.data$Gene==x,]$synonymous.mutations)
reproducible.expr.data$Gene
unlist(reproducible.expr.data$Gene)
as.vector(reproducible.expr.data$Gene)
sapply(as.vector(reproducible.expr.data$Gene), function(x) mapped.gene.data[as.vector(mapped.gene.data$Gene)==x,]$synonymous.mutations)
sapply(as.vector(reproducible.expr.data$Gene), function(x) as.vector(mapped.gene.data[as.vector(mapped.gene.data$Gene)==x,]$synonymous.mutations))
head(reproducible.expr.data)
analyze.data(pooled.data)
expr.data <- pooled.data)
expr.data <- pooled.data
reproducible.expr.data$synonymous.mutations
head(reproducible.expr.data)
reproducible.expr.data$synonymous.mutations
reproducible.expr.data[reproducible.expr.data$synonymous.mutations > 0,]
head(reproducible.expr.data)
type(reproducible.expr.data$synonymous.mutations)
typeof(reproducible.expr.data$synonymous.mutations)
typeof(unlist(reproducible.expr.data$synonymous.mutations))
names(reproducible.expr.data)
as.vector(reproducible.expr.data$Gene)
sapply(as.vector(reproducible.expr.data$Gene), function(x) return(unlist(mapped.gene.data[as.vector(mapped.gene.data$Gene)==x,]$synonymous.mutations)))
unlist(sapply(as.vector(reproducible.expr.data$Gene), function(x) return(unlist(mapped.gene.data[as.vector(mapped.gene.data$Gene)==x,]$synonymous.mutations))))
length(good.expr.data$Gene)
length(mapped.gene.data$Gene)
mapped.gene.data$Gene %in% good.expr.data$Gene
mapped.gene.data[mapped.gene.data$Gene !%in% good.expr.data$Gene,]
mapped.gene.data[!(mapped.gene.data$Gene %in% good.expr.data$Gene),]
expr.data <- pooled.data
length(mapped.gene.data$Gene)
length(good.expr.data)
length(good.expr.data$Gene)
 length(expr.data$Gene)
mapped.gene.data$Gene
expr.data <- pooled.data
length(good.expr.data$Gene)
length(mapped.gene.data$Gene)
length(test$Gene)
length(good.expr.data$Gene)
names(mapped.gene.data)
names(good.expr.data)
head(test)
expr.data <- pooled.data
  just.expression <- merged.data
names(merged.data)
merged.data <- NULL
names(merged.data)
model
qplot(model)
qplot(y=Mean, x=synonymous.mutations, data=reproducible.expr.data)
model
scatter
  scatter = ggplot(data=reproducible.expr.data, aes(x=synonymous.mutations, y=Mean)) + geom_point()
scatter
scatter
scatter
confint(model)
head(cai.data)
head(second.merged.data)
head(second.merged.data)
just.expression <- NULL
head(just.expression)
merged.data <- NULL
second.merged.data <- NULL
head(just.expression <- 
)
head(just.expression)
)
quartz()
qplot(x=synonymous.mutations, y=CUB, data=reproducible.expr.data)
qplot(mutated.expr.data$CUB)
qplot(mutated.expr.data$CUB)
quartz()
quartz()
cor(reproducible.expr.data$CUB~reproducible.expr.data$synonymous.mutations)
cor(reproducible.expr.data$CUB,reproducible.expr.data$synonymous.mutations)
names(expression.data)
head(fold.data)
head(fold.data)
head(ara.plus.evolved)
head(just.anc.expression)
mean(just.anc.expression)
head(fold.data)
ara.plus.evolved$Mean
fold.change
fold.change
fold.change
head(fold.data)
head(merged.fold.data
)
quartz()
qplot(synonymous.mutations, Fold.Change, merged.fold.data)
library(ggplot2)
qplot(synonymous.mutations, Fold.Change, merged.fold.data)
qplot(synonymous.mutations, Fold.Change, data=merged.fold.data)
)
qplot(non.mutated.expr.data$Mean)
qplot(mutated.expr.data$Mean)
)
head(mut.test)
names(thetaS.data)
wilcox.test(x=mutated.expr.data$gene.length, y=non.mutated.expr.data$gene.length)
install.packages(ggplot2)
install.packages("ggplot2")
quartz()
install.packages("ggplot2")
77
qplot()
capabilities()
Sys.getenv(DISPLAY)
Sys.getenv('DISPLAY')
Sys.setenv("DISPLAY"=":0.0")
capabilities
capabilities()
capabilities()
capabilities()
mutated.expr.data$Mean
mean(mutated.expr.data$Mean)
mean(non.mutated.expr.data$Mean)
mediam(mutated.expr.data$Mean)
median(mutated.expr.data$Mean)
median(non.mutated.expr.data$Mean)
head(expression.data)
head(martincorena.data)
martincorena.HGT.trues
head(martincorena.HGT(
))
head(martincorena.HGT)
))
martincorena.HGT.trues
HGT.trues
martincorena.HGT.trues
martincorena.HGT.trues
length(martincorena.HGT.trues)
length(martincorena.HGT.falses)
mean(mutated.expr.data$CAI)
mean(non.mutated.expr.data$CAI)
median(mutated.expr.data$CAI)
median(non.mutated.expr.data$CAI)
head(reproducible.expr.data)
length(reproducible.expr.data)
length(reproducible.expr.data$locus_tag)
length(mutated.expr.data$locus_tag)
length(non.mutated.expr.data$locus_tag)
head(test1)
length(test1$locus_tag)
length(test2$locus_tag)
wilcox.text(x=test1$Mean,y=test2$Mean)
wilcox.test(x=test1$Mean,y=test2$Mean)
t.test(x=test1$Mean,y=test2$Mean)
test1$Mean
qplot(data=reproducible.expr.data,x=synonymous.mutations, y=Mean, position=position_jitter(width=0.2,height=0))

mean(test1$Mean)
mean(test2$Mean)
 mean(test1$CAI)
mean(test2$CAI)
mutated.gene.len.sample = sample(x=mutated.expr.data$gene.length,size=500)
non.mutated.gene.len.sample = sample(x=non.mutated.expr.data$gene.length,size=500)
wilcox.test(x=mutated.gene.len.sample, y=non.mutated.gene.len.sample)
t.test(x=mutated.gene.len.sample, y=non.mutated.gene.len.sample)
cor(reproducible.expr.data$gene.length,reproducible.expr.data$Mean)
1214-776
t.test(x=mutated.expr.data$Mean,y=non.mutated.expr.data$Mean)
cor(test3$gene.length,test3$Mean)
model2
model3
confint(model3)
cor(reproducible.expr.data$Mean,reproducible.expr.data$gene.length)
test1$gene.length
mean(test1$gene.length)
mean(test2$gene.length)
mean(mutated.expr.data$gene.length)
mean(non.mutated.expr.data$gene.length)
1283-856
ggplot(reproducible.expr.data, aes(x=gene.length,fill=Mutated)) + geom_histogram(alpha=0.2, binwidth=0.1)
ggplot(reproducible.expr.data, aes(x=gene.length,fill=Mutated)) + geom_histogram(alpha=0.2, binwidth=0.1)
qplot(reproductible.expr.data, aes(x=gene.length, fill=Mutated))
qplot(reproducible.expr.data, aes(x=gene.length, fill=Mutated))
ggplot(reproducible.expr.data, aes(x=gene.length, fill=Mutated))
ggplot(reproducible.expr.data, aes(x=gene.length, fill=Mutated)) + geom_histogram()
mean(mutated.expr.data$Mean)
mean(non.mutated.expr.data$Mean)
median(mutated.expr.data$Mean)
median(non.mutated.expr.data$Mean)
x
mean(mutated.expr.data)
head(mutated.expr.data)
mean(mutated.expr.data$Mean)
mean(non.mutated.expr.data$Mean)
